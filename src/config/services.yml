services:
  # default configuration for services in *this* file
  _defaults:
    # automatically injects dependencies in your services
    autowire: true
    # automatically registers your services as commands, event subscribers, etc.
    autoconfigure: true
    # this means you cannot fetch services directly from the container via $container->get()
    # if you need to
    public: false

  ### BASE FRAMEWORK SERVICES REGISTRATION ###
  Symfony\Component\Routing\RequestContext: ~

  url_matcher:
    class: Symfony\Component\Routing\Matcher\UrlMatcher
    public: true
    arguments: ['%routes%', '@Symfony\Component\Routing\RequestContext']

  monolog:
    class: Monolog\Logger
    arguments:
    - 'file_stream'

  controller_resolver:
    class: Core\Controller\ControllerResolver
    public: true
    arguments:
    - '@monolog'
    - '@service_container'

  argument_resolver:
    class: Symfony\Component\HttpKernel\Controller\ArgumentResolver
    public: true
    tags:
    - {name: 'argument_resolver'}

  framework:
    class: Core\Framework
    public: true
    arguments:
    - '@service_container'

  ### END ###

  ### Register here place where you want to work ###
  App\:
    resource: '../app/*'
    tags:
      - { name: argument_resolver.service }

  ### Register controllers as a services for passing services to constructor
  App\Controller\:
    resource: '../app/Controller/*'
    public: true
    tags:
      - controller.service_arguments